[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools>=68" ]

[project]
name = "readmeai"
version = "0.6.0"
description = "Automated README file generator, powered by AI."

readme = "README.md"
keywords = [
    "ai-documentation",
    "ai-powered",
    "ai-readme",
    "automatic-documentation",
    "chat-gpt",
    "cli",
    "code-documentation",
    "developer-tools",
    "documentation-automation",
    "gemini",
    "github-documentation",
    "gpt-4",
    "llm",
    "markdown-generator",
    "openai",
    "project-documentation",
    "readme-ai",
    "readme-automation",
    "readme-generator",
    "software-documentation",
]

license = { text = "MIT" }
authors = [
    { name = "Eli Salamie", email = "egsalamie@gmail.com" },
]
requires-python = ">=3.9,<4.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Pydantic",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Typing :: Typed",
]
dependencies = [
    "aiohttp>=3.9.5",
    "click>=8.1.7",
    "gitpython>=3.1.31",
    "openai>=1.16.2",
    "pydantic>=2.8",
    "pydantic-extra-types>=2.9",
    "pydantic-settings>=2.4",
    "pyyaml>=6.0.1",
    "structlog>=24.4",
    "tenacity>=8.2.2",
    "tiktoken>=0.4",
    "tomli; python_version<'3.11'",
    "typing-extensions; python_version<'3.11'",
]

optional-dependencies.anthropic = [ "anthropic" ]
optional-dependencies.dev = [
    "mypy",
    "nox",
    "pre-commit",
    "ruff",
    "uv",
]
optional-dependencies.docs = [
    "mkdocs",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-material[imaging]",
    "mkdocs-minify-plugin",
]
optional-dependencies.google-generativeai = [ "google-generativeai" ]
optional-dependencies.test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-pretty",
    "pytest-randomly",
    "pytest-sugar",
    "pytest-xdist",
]
urls.Documentation = "https://eli64s.github.io/readme-ai"
urls.Homepage = "https://github.com/eli64s/readme-ai"
scripts.readmeai = "readmeai.cli.main:main"

[tool.setuptools]
package-dir = { "" = "." }
packages = [ "readmeai" ]

[tool.setuptools.package-data]
"*" = [ "py.typed" ]

[tool.setuptools.exclude-package-data]
"*" = [
    "notebooks/*",
    "tests/*",
    "site/*",
    "setup/*",
]

[tool.pytest.ini_options]
addopts = [
    "-vv",
    "--tb=short",
    "--durations=5",
    "--cov=readmeai",
    "--cov-branch",
    "--cov-fail-under=80",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=json:tests/.reports/coverage.json",
    "--asyncio-mode=auto",
    "--numprocesses=auto",
]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
pythonpath = [ "readmeai" ]
testpaths = [ "tests" ]

[tool.coverage.report]
exclude_also = [
    "if __name__ == '__main__':",
    "pragma: no cover",
    "raise NotImplementedError",
]
omit = [
    "tests/*",
    "**/__init__.py",
    "noxfile.py",
    "readmeai/cli/interactive.py",
    "readmeai/readers/git/metadata.py",
]
precision = 2
show_missing = true
skip_empty = true
sort = "cover"

[tool.coverage.run]
data_file = "tests/.reports/.coverage"
